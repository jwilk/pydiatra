#!/usr/bin/perl

# Copyright © 2012-2016 Jakub Wilk
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

use strict;
use warnings;

use v5.10; # for the // operator

use File::Basename qw(dirname);
use POSIX qw(strftime);

chdir(dirname($0) . '/..') or die $!;

sub extract_exceptions
{
    my ($version) = @_;
    my $uri = "https://docs.python.org/$version/library/exceptions.html";
    if ($version =~ m/^2\.[0-5]/) {
        $uri = "https://docs.python.org/$version/lib/module-exceptions.html"
    }
    open(my $fh, "wget -q -O - $uri |") or die $!;
    {
        local $/ = undef;
        $_ = <$fh>;
    }
    close($fh) or die $!;
    m,<pre>(?:<span class="ne">)?(BaseException.*?)</pre>,s or die "cannot extract exception names for Python $version";
    $_ = $1;
    s,</?span[^<]*>,,g;
    s,\s+\(.*$,,gm;
    s,^[ \t|+-]++,,gm;
    @_ = split;
    for (@_) {
        m/^\w+$/ or die "invalid Python $version exception name: $_";
    }
    return @_;
}

my @versions = qw(2.5 2.6 2.7 3.0 3.1 3.2 3.3 3.4);
my %exceptions = ();
for my $v (@versions) {
    $exceptions{$_} = 1 for extract_exceptions($v);
}
my @exceptions = sort keys %exceptions;
my $date = strftime('%Y-%m-%d', gmtime);
open(my $fh, '>', 'data/exceptions') or die $!;
$" = ", ";
print $fh <<EOF ;
# This file contains names of built-in exceptions that exist in the following
# Python versions: @versions

# Last update: $date

EOF
$" = "\n";
print $fh "@exceptions\n";
close($fh) or die $!;

# vim:ts=4 sts=4 sw=4 et
